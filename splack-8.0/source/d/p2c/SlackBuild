#!/bin/sh

# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
PKG=$TMP/package-p2c
if [ ! -d $PKG ]; then
  mkdir -p $PKG # place for the package to be built
fi

# Explode the package framework:
cd $PKG
explodepkg $CWD/_p2c.tar.gz

echo "+================+"
echo "| p2c-1.21alpha2 |"
echo "+================+"
cd $TMP
tar xzvf $CWD/p2c-1.21alpha2.tar.gz
cd p2c-1.21alpha-07.Dec.93
zcat $CWD/p2c-1.21alpha2.diff.gz | patch -p1 -E
find . -name "*.orig"  -exec rm -v {} \;
cd src
make
make p2cc
strip p2c
cat p2c > $PKG/usr/bin/p2c
cat p2cc > $PKG/usr/bin/p2cc
cat libp2c.a > $PKG/usr/lib/libp2c.a
cat p2c.man | gzip -9c > $PKG/usr/man/man1/p2c.1.gz
cat p2cc.man | gzip -9c > $PKG/usr/man/man1/p2cc.1.gz
cat sys.p2crc > $PKG/usr/lib/p2c/p2crc
cat loc.p2crc > $PKG/usr/lib/p2c/loc.p2crc
cat system.imp > $PKG/usr/lib/p2c/system.imp
cat system.m2 > $PKG/usr/lib/p2c/system.m2
cat turbo.imp > $PKG/usr/lib/p2c/turbo.imp
cat string.pas > $PKG/usr/lib/p2c/string.pas
cat p2c.h > $PKG/usr/include/p2c/p2c.h
cd ..
mkdir -p $PKG/usr/doc/p2c-1.21alpha2
cp -a README ftp.README examples $PKG/usr/doc/p2c-1.21alpha2
( cd $PKG/usr/doc/p2c-1.21alpha2/examples ; rm -r c )
chown -R root.root $PKG/usr/doc/p2c-1.21alpha2

# Build the package:
cd $PKG
tar czvf $TMP/p2c.tgz .

# Warn of zero-length files:
for file in `find . -type f -print` ; do
 if [ "`filesize $file`" = "0" ]; then
  echo "WARNING: zero length file $file"
 fi
 if [ "`filesize $file`" = "20" ]; then
  echo "WARNING: possible empty gzipped file $file"
 fi
done

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/p2c-1.21alpha-07.Dec.93
  rm -rf $PKG
fi
